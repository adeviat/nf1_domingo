

drop table if exists users;
create table users
(
    id               integer not null primary key auto_increment,
    name             varchar(255) not null,
    surname          varchar(255) not null,
    phonenumber      integer default null,
    email            varchar(255) not null,
    password         varchar(255) not null,
    address          varchar(255) not null,
    postcode         varchar(10) not null,
    updated_at       timestamp not null default now() on update now(),
    created_at       timestamp not null default now()
);
drop table if exists globaladmin;
create table globaladmin
(
    user_id         integer not null,
    role            varchar(255),
    updated_at      timestamp not null default now() on update now(),
    created_at      timestamp not null default now(),
    CONSTRAINT FOREIGN KEY (user_id) REFERENCES users(id)
);
drop table if exists stores;
create table stores
(
    id                integer not null primary key auto_increment,
    name              varchar(255) not null,
    address           varchar(255) not null,
    postcode          varchar(10) not null,
    updated_at        timestamp not null default now() on update now(),
    created_at        timestamp not null default now()
);
drop table if exists admin;
create table admin
(
    user_id         integer not null,
    store_id   integer not null,
    updated_at      timestamp not null default now() on update now(),
    created_at      timestamp not null default now(),
    PRIMARY KEY (user_id,store_id),
    CONSTRAINT FOREIGN KEY (user_id) REFERENCES users(id),
    CONSTRAINT FOREIGN KEY (store_id) REFERENCES stores(id)
);

drop table if exists products;
create table products
(
    id               integer not null primary key auto_increment,
    name             varchar(255)  not null,
    description      varchar(16) not null,
    price            varchar(255) not null,
    photo            varchar(255) not null,
    store_id         integer not null,
    updated_at       timestamp not null default now() on update now(),
    created_at       timestamp not null default now(),
    CONSTRAINT FOREIGN KEY (store_id) REFERENCES stores(id)
);

drop table if exists delivery_addresses;
create table delivery_addresses
(
    id   integer      not null primary key auto_increment,
    address varchar(255) not null,
    postcode varchar(10) not null,
    updated_at       timestamp not null default now() on update now(),
    created_at       timestamp not null default now(),
    CONSTRAINT FOREIGN KEY (id) REFERENCES users(id)
);
drop table if exists store_delivery_addresses;
create table store_delivery_addresses
(
    id   integer      not null primary key auto_increment,
    address varchar(255) not null,
    postcode varchar(10) not null,
    updated_at       timestamp not null default now() on update now(),
    created_at       timestamp not null default now(),
    CONSTRAINT FOREIGN KEY (id) REFERENCES stores(id)
);

drop table if exists store_types;
create table store_types
(
    id   integer      not null primary key auto_increment,
    type varchar(255) not null,
    updated_at       timestamp not null default now() on update now(),
    created_at       timestamp not null default now(),
    CONSTRAINT FOREIGN KEY (id) REFERENCES stores(id)
);
drop table if exists store_categories;
create table store_categories
(
    id   integer      not null primary key auto_increment,
    category varchar(255) not null,
    updated_at       timestamp not null default now() on update now(),
    created_at       timestamp not null default now(),
    CONSTRAINT FOREIGN KEY (id) REFERENCES stores(id)
);
drop table if exists product_categories;
create table product_categories
(
    id   integer      not null primary key auto_increment,
    category varchar(255) not null,
    updated_at       timestamp not null default now() on update now(),
    created_at       timestamp not null default now(),
    CONSTRAINT FOREIGN KEY (id) REFERENCES products(id)
);
create table store_storedeliveryaddresses
(
    store_id         integer not null,
    storedeliveryaddresses_id   integer not null,
    updated_at      timestamp not null default now() on update now(),
    created_at      timestamp not null default now(),
    PRIMARY KEY (store_id,storedeliveryaddresses_id),
    CONSTRAINT FOREIGN KEY (storedeliveryaddresses_id) REFERENCES store_delivery_addresses(id),
    CONSTRAINT FOREIGN KEY (store_id) REFERENCES stores(id)
);
